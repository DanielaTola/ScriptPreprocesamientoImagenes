from PIL import Image
import os
import numpy as np

input_dir = "C:/Users/Daniela/Desktop/Utimo DataSet/DA/Etapa4"
output_dir = "C:/Users/Daniela/Desktop/Utimo DataSet/Normalizado-Renderizado/Etapa4"

# crear el directorio de salida si no existe
if not os.path.exists(output_dir):
    os.makedirs(output_dir)


# tamaño deseado
desired_size = (226, 256)

# recorrer cada archivo en el directorio de entrada
for filename in os.listdir(input_dir):
    # abrir la imagen usando Pillow
    with Image.open(os.path.join(input_dir, filename)) as img:
        # ajustar el tamaño de la imagen
        resized_img = img.resize(desired_size)

        # convertir la imagen a escala de grises y normalizarla
        grayscale_img = resized_img.convert("L")
        normalized_img = Image.eval(grayscale_img, lambda x: x / 255.0)

        # convertir la imagen a un arreglo de NumPy
        normalized_array = np.array(normalized_img)

        # realizar la multiplicación
        normalized_array = (normalized_array * 255).astype(np.uint8)

        # convertir el arreglo de vuelta a una imagen
        normalized_img = Image.fromarray(normalized_array)

        # guardar la imagen procesada en el directorio de salida
        normalized_img.save(os.path.join(output_dir, filename))